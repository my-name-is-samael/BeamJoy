---@class BJIManager
---@field _name string
---@field onLoad? fun()

---@class BJIScenario
---@field _name string
---@field _key string
---@field _isSolo boolean
---@field _skip boolean?
---@field canChangeTo (fun(ctxt: TickContext): boolean)
---@field onLoad (fun(ctxt: TickContext))?
---@field onUnload (fun(ctxt: TickContext))?
---@field onVehicleSpawned (fun(gameVehID: integer))?
---@field onVehicleResetted (fun(gameVehID: integer))?
---@field onVehicleSwitched (fun(oldGameVehID: integer, newGameVehID: integer))?
---@field onVehicleDestroyed (fun(gameVehID: integer))?
---@field updateVehicles (fun())?
---@field onGarageRepair (fun())?
---@field onDropPlayerAtCamera (fun())?
---@field onDropPlayerAtCameraNoReset (fun())?
---@field tryTeleportToPlayer (fun(targetID: integer, forced: boolean?))?
---@field tryTeleportToPos (fun(pos: vec3, saveHome: boolean?))?
---@field tryFocus (fun(targetID: integer))?
---@field trySpawnNew (fun(model: string, config: table|string?))?
---@field tryReplaceOrSpawn (fun(model: string, config: table|string?))?
---@field tryPaint (fun(paint: table, paintNumber: integer))?
---@field canRefuelAtStation (fun(): boolean)? default false
---@field canRepairAtGarage (fun(): boolean)? default false
---@field canSpawnNewVehicle (fun(): boolean)? default true
---@field canReplaceVehicle (fun(): boolean)? default true
---@field canPaintVehicle (fun(): boolean)? default true
---@field canDeleteVehicle (fun(): boolean)? default true
---@field canDeleteOtherVehicles (fun(): boolean)? default true
---@field canDeleteOtherPlayersVehicle (fun(): boolean)? default false
---@field canSpawnAI (fun(): boolean)? default false
---@field canWalk (fun(): boolean)? default false
---@field getModelList (fun(): table<string, table>)?
---@field getPlayerListActions (fun(player: BJIPlayer, ctxt: TickContext?): table<integer, table>)?
---@field canQuickTravel (fun(): boolean)? default false
---@field canShowNametags (fun(): boolean)? default false
---@field doShowNametag (fun(vehData: {gameVehicleID: integer, ownerID: integer}): boolean, BJIColor?, BJIColor?)?
---@field doShowNametagsSpecs (fun(vehData: {gameVehicleID: integer, ownerID: integer}): boolean, BJIColor?, BJIColor?)?
---@field getCollisionsType (fun(ctxt: TickContext): integer)? BJI.Managers.Collisions.TYPES
---@field renderTick (fun(ctxt: TickContext))?
---@field fastTick (fun(ctxt: TickContext))?
---@field slowTick (fun(ctxt: TickContext))?

---@class BJIWindow
---@field name string
---@field getState fun(ctxt): boolean
---@field onLoad fun()?
---@field onUnload fun()?
---@field menu fun(ctxt: TickContext)?
---@field header fun(ctxt: TickContext)?
---@field body fun(ctxt: TickContext)
---@field footer fun(ctxt: TickContext)?
---@field footerLines fun(ctxt: TickContext): integer?
---@field flags number[]?
---@field onClose fun()?
---@field w integer?
---@field h integer?
---@field x integer?
---@field y integer?

---@class BJArena
---@field name string
---@field enabled boolean
---@field previewPosition BJIPositionRotation
---@field startPositions tablelib<integer, BJIPositionRotation>
---@field centerPosition vec3
---@field radius number

---@class ClientVehicleConfig
---@field model string
---@field label string
---@field key string when saved config
---@field parts table<string, string>
---@field vars table<string, any>
---@field paints table<string, table>?

---@class ServerVehicleConfig
---@field pid integer
---@field vid integer client gameVehID
---@field jbm string?
---@field vcf {model: string?, mainPartName: string, parts: table<string, string>, vars: table<string, any>, paints: table<string, table>}
---@field pro "0"|"1" vehicle's protection against cloning
---@field pos number[] 3 indices
---@field rot number[] 4 indices
---@field ign number
